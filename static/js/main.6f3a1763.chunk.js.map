{"version":3,"sources":["QuoteContainer/QuoteAuthor/QuoteAuthor.jsx","QuoteContainer/QuoteText/QuoteText.jsx","QuoteContainer/Buttons/Buttons.jsx","QuoteContainer/QuoteContainer.jsx","Loader/Loader.jsx","App.jsx","index.jsx"],"names":["QuoteAuthor","props","className","quoteAuthor","author","QuoteText","class","newClass","quoteText","quote","Buttons","onClick","children","twitterUrl","window","open","console","log","title","QuoteContainer","Loader","App","useState","setQuote","setAuthor","quoteClass","setQuoteClass","loader","setLoader","quoteAPI","a","fetch","proxyUrl","response","json","data","length","useEffect","e","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"0UAWeA,MARf,SAAqBC,GACjB,OACI,qBAAKC,UAAU,eAAf,SACI,+BAAOD,EAAME,YAAYC,Y,YCMtBC,MATf,SAAmBJ,GACf,OACI,sBAAKC,UAAU,aAAf,UACI,mBAAGI,MAAM,sBACT,uBAAMJ,UAAWD,EAAMM,SAAvB,cAAmCN,EAAMO,UAAUC,aCWhDC,G,MAfC,SAACT,GAAY,IAClBU,EAAqBV,EAArBU,QAASC,EAAYX,EAAZW,SAMhB,OACI,sBAAKV,UAAU,mBAAf,UACI,wBAAQS,QAPG,WACf,IAAME,EAAU,gDAA4CZ,EAAMO,UAAUC,MAA5D,cAAuER,EAAME,YAAYC,QACzGU,OAAOC,KAAKF,EAAY,UACxBG,QAAQC,IAAIhB,IAIqBC,UAAU,iBAAiBgB,MAAM,aAA9D,SAA2E,mBAAGhB,UAAU,qBACxF,wBAAQA,UAAU,YAAYS,QAASA,EAAvC,SAAiDC,SCK9CO,MAZf,SAAwBlB,GACpB,OACI,mCACA,sBAAKC,UAAU,kBAAf,UACI,cAAC,EAAD,CAAWM,UAAWP,EAAMO,UAAWD,SAAUN,EAAMM,WACvD,cAAC,EAAD,CAAaJ,YAAaF,EAAME,cAChC,cAAC,EAAD,CAASQ,QAASV,EAAMU,QAASH,UAAWP,EAAMO,UAAWL,YAAaF,EAAME,YAAhF,+B,MCHGiB,MANf,WACI,OACI,qBAAKlB,UAAU,YCkDRmB,MAlDf,WAAe,MAEeC,mBAAS,IAFxB,mBAEJb,EAFI,KAEGc,EAFH,OAGiBD,mBAAS,IAH1B,mBAGJlB,EAHI,KAGIoB,EAHJ,OAIyBF,mBAAS,IAJlC,mBAIJG,EAJI,KAIQC,EAJR,OAKiBJ,oBAAS,GAL1B,mBAKJK,EALI,KAKIC,EALJ,KAULC,EAAQ,uCAAG,8BAAAC,EAAA,6DACbF,GAAU,GADG,kBAGcG,MAAMC,uHAHpB,cAGHC,EAHG,gBAIUA,EAASC,OAJnB,OAIHC,EAJG,OAKTZ,EAASY,EAAK3B,WACU,KAArB2B,EAAKhC,YACJqB,EAAU,WAEVA,EAAUW,EAAKhC,aAEfgC,EAAK3B,UAAU4B,OAAS,IACxBV,EAAc,cAEdA,EAAc,IAEtBE,GAAU,GAhBG,kDAkBTC,IAlBS,0DAAH,qDAiCd,OAJDQ,qBAAU,WACNR,MAED,IAEG,mCACAF,EAAU,cAAC,EAAD,IAAe,cAAC,EAAD,CAAgBpB,SAAUkB,EAAYjB,UAAW,CAACC,SAAQN,YAAa,CAACC,UAASO,QAXzF,SAAC2B,GAEnB,OADAA,EAAEC,iBACKV,UCrCfW,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6f3a1763.chunk.js","sourcesContent":["import React from 'react'\r\nimport './QuoteAuthor.css'\r\n\r\nfunction QuoteAuthor(props) {\r\n    return (\r\n        <div className=\"quote-author\">\r\n            <span>{props.quoteAuthor.author}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuoteAuthor\r\n","import React from 'react'\r\nimport './QuoteText.css'\r\n\r\nfunction QuoteText(props) {\r\n    return (\r\n        <div className=\"quote-text\">\r\n            <i class=\"fas fa-quote-left\"></i>\r\n            <span className={props.newClass}> {props.quoteText.quote}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuoteText\r\n","import React from 'react'\r\nimport './Buttons.css'\r\n\r\nconst Buttons = (props) =>  {\r\n    const {onClick, children} = props;\r\n    const tweetQuote = ()=>{\r\n        const twitterUrl = `https://twitter.com/intent/tweet?text=${props.quoteText.quote} - ${props.quoteAuthor.author}`;\r\n        window.open(twitterUrl, '_blank');\r\n        console.log(props)\r\n    }\r\n    return (\r\n        <div className=\"button-container\">\r\n            <button onClick={tweetQuote} className=\"twitter-button\" title=\"Tweet this\"><i className=\"fab fa-twitter\"></i></button>\r\n            <button className=\"new-quote\" onClick={onClick}>{children}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Buttons\r\n","import React from 'react'\r\nimport QuoteAuthor from './QuoteAuthor/QuoteAuthor'\r\nimport './QuoteContainer.css'\r\nimport QuoteText from './QuoteText/QuoteText'\r\nimport Buttons from './Buttons/Buttons'\r\n\r\nfunction QuoteContainer(props) {\r\n    return (\r\n        <>\r\n        <div className=\"quote-container\">\r\n            <QuoteText quoteText={props.quoteText} newClass={props.newClass}/>\r\n            <QuoteAuthor quoteAuthor={props.quoteAuthor}/>\r\n            <Buttons onClick={props.onClick} quoteText={props.quoteText} quoteAuthor={props.quoteAuthor}> New Quote </Buttons>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuoteContainer\r\n","import React from 'react'\r\nimport './Loader.css'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, {useState, useEffect} from 'react'\r\nimport './App.css'\r\nimport QuoteContainer from './QuoteContainer/QuoteContainer'\r\nimport Loader from './Loader/Loader'\r\n\r\nfunction App() {\r\n    //Set States, API & ProxyURLs\r\n    const [quote, setQuote] = useState(\"\");\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [quoteClass, setQuoteClass] = useState(\"\")\r\n    const [loader, setLoader] = useState(false)\r\n    const proxyUrl = 'https://polar-everglades-12070.herokuapp.com/';\r\n    const apiUrl = \"http://api.forismatic.com/api/1.0/?method=getQuote&lang=en&format=json\";\r\n\r\n    //Call the API\r\n    const quoteAPI = async () =>{\r\n        setLoader(true);\r\n        try{\r\n            const response = await fetch(proxyUrl + apiUrl);\r\n            const data = await response.json();\r\n            setQuote(data.quoteText);\r\n            if(data.quoteAuthor === ''){\r\n                setAuthor('Unknown');\r\n            } else{\r\n                setAuthor(data.quoteAuthor)\r\n            }\r\n            if (data.quoteText.length > 120){\r\n                setQuoteClass(\"long-quote\");\r\n            }else{\r\n                setQuoteClass(\"\");\r\n            }\r\n        setLoader(false);\r\n        } catch(error){\r\n            quoteAPI();\r\n    \r\n        }\r\n    }\r\n\r\n    //Button function to call newQuote\r\n    const newQuoteClick = (e)=> {\r\n        e.preventDefault();\r\n        return quoteAPI();\r\n    } \r\n\r\n   useEffect(() => {\r\n       quoteAPI();\r\n       // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n    return (\r\n         <>\r\n        {loader ? (<Loader />) : (<QuoteContainer newClass={quoteClass} quoteText={{quote}} quoteAuthor={{author}} onClick={newQuoteClick}/>)}\r\n        </> \r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}